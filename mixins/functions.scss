/* Takes raw number or px value to convert to rem value on a base 10 (62.5%) font size */
@function rem($size) {
    $stringSize: inspect($size);
    $rem: 0;

    @if str-index($stringSize, 'px') {
        $rem: $size / 10px;
    } @else {
        $rem: $size / 10;
    }

    @if $rem == 0 {
        @return 0;
    } @else {
        @return $rem * 1rem;
    }
}

/* Inline function utilizing breakpoint function to output a collection of classes to override padding in the context of All, Top, Right, Bottom or Left with each available to a specific breakpoint defined in that list. */
@each $direction in ('All', '-Top', '-Bottom', '-Left', '-Right') {
    .noPad#{if($direction == 'All', null, str-slice($direction, 2, -1))} {
        padding#{if($direction == 'All', null, to-lower-case($direction))}: 0 !important;
        @each $breakpoint, $breakpointValMax, $breakpointValMin in $list_Breakpoints {
            &-#{$breakpoint}-max {
                @include breakpoint($breakpoint, max) {
                    @if $direction == All {
                        padding: 0 !important;
                    }
                    @else {
                        padding#{if($direction == 'All', null, to-lower-case($direction))}: 0 !important;
                    }
                }
            }
            &-#{$breakpoint}-min {
                @include breakpoint($breakpoint, min) {
                    @if $direction == All {
                        padding: 0 !important;
                    }
                    @else {
                        padding#{if($direction == 'All', null, to-lower-case($direction))}: 0 !important;
                    }
                }
            }
        }
    }
}
